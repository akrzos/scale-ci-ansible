---
# Read the DNS update key file.
- name: Reading the remote dns_update.key file
  command: grep secret /home/cloud-user/scale-ci/dns_update.key
  register: update_secret
  changed_when: false

# Create a regular expression to get the secret key.
- name: Setting the regular expression to find the secret
  set_fact:
    # Example:        secret "8kjyy/xFvzapFwmcWwLzvA==";
    secret_regex: 'secret "(.*)";'

# Set the DNS secret value.
- name: Creating a variable with the DNS secret value
  set_fact:
    dns_key_secret: "{{ update_secret['stdout']|regex_findall(secret_regex)|first }}"

- name: Getting the IP address for the DNS VM ns-master
  shell: |
    . /home/cloud-user/overcloudrc
    openstack server show ns-master.{{ clusterid }}.{{ dns_domain }} --format value -c addresses
  # "ns-master-scale-ci.example.com-net=192.168.99.17, 172.21.0.129"
  register: dns_addresses
  changed_when: false

- name: Parsing the floating ip from the DNS VM addresses
  set_fact:
    cluster_dns_ip: "{{ dns_addresses['stdout'].split(', ')[1] }}"

- name: Getting the IP address for the infrastructure node
  shell: |
    . /home/cloud-user/overcloudrc
    openstack server show infra-node-0.{{ clusterid }}.{{ dns_domain }} --format value -c addresses
  register: infra_addresses
  changed_when: false

- name: Parse the floating ip from the infrastrcture addresses
  set_fact:
    openshift_openstack_public_router_ip: "{{ infra_addresses['stdout'].split(', ')[1] }}"

- name: Print the openshift router ip address
  debug:
    msg: "{{ openshift_openstack_public_router_ip }}"

- name: Add public wildcard record to the infra node
  nsupdate:
    key_name: update-key
    key_secret: "{{ dns_key_secret }}"
    key_algorithm: hmac-md5
    server: "{{ cluster_dns_ip }}"
    zone: "{{ clusterid }}.{{ dns_domain }}"
    record: "*.apps"
    value: "{{ openshift_openstack_public_router_ip }}"
    type: "A"
    state: present
  register: nsupdate_add_result
  until: nsupdate_add_result is succeeded
  retries: 10
  delay: 1
  when:
    - openshift_openstack_public_router_ip != ""
